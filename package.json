{
  "name": "react-cui",
  "version": "0.1.0",
  "private": true,
  "dependencies": {
    "@fortawesome/fontawesome-svg-core": "^1.2.4",
    "@fortawesome/free-brands-svg-icons": "^5.3.1",
    "@fortawesome/free-regular-svg-icons": "^5.3.1",
    "@fortawesome/free-solid-svg-icons": "^5.3.1",
    "@fortawesome/react-fontawesome": "0.1.0-11",
    "abort-controller": "^1.0.2",
    "classnames": "^2.2.6",
    "eventemitter3": "^3.1.0",
    "history": "^4.7.2",
    "istanbul-lib-hook": "^1.2.1",
    "jshint": "^2.9.6",
    "moment": "^2.22.2",
    "npm-run-all": "^4.1.3",
    "react": "16.3",
    "react-dom": "^16.4.1",
    "react-redux": "^5.0.7",
    "react-router-dom": "^4.2.2",
    "react-scripts": "1.1.1",
    "react-transition-group": "^2.4.0",
    "redux": "^3.7.2",
    "redux-thunk": "^2.3.0",
    "serve": "^10.0.2",
    "ws": "^5.2.2"
  },
  "scripts": {
    "3100": "REACT_APP_MODEL=3100 npm-run-all -p watch-css start-js",
    "7000": "REACT_APP_MODEL=7000 npm-run-all -p watch-css start-js",
    "9100": "REACT_APP_MODEL=9100 npm-run-all -p watch-css start-js",
    "MLobby": "REACT_APP_MODEL=MLobby npm-run-all -p watch-css start-js",
    "build-css": "node-sass-chokidar src/ -o src/",
    "watch-css": "npm run build-css && node-sass-chokidar src/ -o src/ --watch --recursive",
    "start-js": "react-scripts start",
    "start": "REACT_APP_MODEL=9100 npm-run-all -p watch-css start-js",
    "build-js": "react-scripts build",
    "build": "npm-run-all build-css build-js",
    "test": "react-scripts test --env=jsdom",
    "eject": "react-scripts eject"
  },
  "devDependencies": {
    "eslint-plugin-flowtype": "^2.50.0",
    "eslint-plugin-import": "^2.14.0",
    "eslint-plugin-jsx-a11y": "^5.1.1",
    "eslint-plugin-react": "^7.11.1",
    "node-sass-chokidar": "0.0.3"
  },
  "proxy": {
    "/events": {
      "target": "ws://localhost:8081",
      "ws": true
    },
    "/assets": {
      "target": "http://localhost:8081"
    },
    "/api": {
      "target": "http://localhost:8081"
    }
  },
  "homepage": "/app/designs/cluster",
  "eslintConfig": {
    "extends": "react-app",
    "rules": {
      "no-unused-vars": [
        "warn",
        {
          "vars": "all",
          "args": "after-used",
          "ignoreRestSiblings": false
        }
      ]
    }
  }
}
